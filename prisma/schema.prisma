// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum languages{
  python
  c
  cpp
}
model questions{
  question_id Int @id @default(autoincrement())
  question String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  code_submit code_submit[]
  codes_run codes_run[]
  question_template question_template[]

}

model codes_run{
  id Int @id @default(autoincrement())
  question_id Int
  user_id Int
  code String
  output String
  language languages
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  question questions @relation(fields: [question_id], references: [question_id])
}
model code_submit{
  id Int @id @default(autoincrement())
  user_id Int
  question_id Int
  code String
  output String
  language languages
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  question questions @relation(fields: [question_id], references: [question_id])
}
model question_template{
  id Int @id @default(autoincrement())
  question_id Int
  language languages
  template String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  question questions @relation(fields: [question_id], references: [question_id])
  testcases testcases[]
}
model testcases{
  id Int @id @default(autoincrement())
  template_id Int
  main String

  question_template question_template @relation(fields: [template_id], references: [id])
}